#
# Makefile for z80/SDCC
# @author Takahide Matsutsuka <markn@markn.org>
#
# $Id: Makefile.z80,v 1.15 2009/12/16 06:47:17 matsutsuka Exp $
#

### Compiler definitions
CC       = sdcc
AS       = sdasz80

### Custom rules
CUSTOM_RULE_C_TO_OBJECTDIR_O=1
CUSTOM_RULE_ALLOBJS_TO_TARGETLIB=1
CUSTOM_RULE_LINK=1

### Default flags
## This works
CFLAGS  += --debug -Dint="volatile int" -D__PERIDOT -Dchar="volatile char" --fverbose-asm -mz80 -c 

#CFLAGS += --no-peep --no-peep-return --nooverlay --nogcse --noinduction --noinvariant --noloopreverse --opt-code-size 

## This is the one testing
#CFLAGS  += --debug --less-pedantic --fno-omit-frame-pointer --nojtbound --nolabelopt --nolospre 
#CFLAGS  += --debug  --less-pedantic --fno-omit-frame-pointer --nojtbound --nolabelopt --nolospre 

## This is the Marvell recomendation
## -Dint="volatile int" -Dchar="volatile char" --debug  --less-pedantic --fno-omit-frame-pointer --nooverlay --nogcse  --noinduction --noinvariant  --nojtbound --noloopreverse --nolabelopt --no-peep --no-peep-return --nolospre 

ASFLAGS += -l
LDFLAGS += --debug --code-loc 0x100 --data-loc 0x000 -mz80 --no-std-crt0 --verbose 
AROPTS   = -a

LINKER_LIBS += contiki-$(TARGET).lib

### CPU-dependent cleanup files
CLEAN += *.ihx *.lnk *.sym contiki-$(TARGET).lib *.lk *.noi *.cdb

### CPU-dependent directories
CONTIKI_CPU_DIRS = . lib

### CPU-dependent source files
CONTIKI_SOURCEFILES += strcasecmp.c mtarch.c uip_arch.c

CONTIKI_ASMFILES += uip_arch-asm.S crt0.S

CONTIKI_ASMOBJECTFILES = ${addprefix $(OBJECTDIR)/,$(CONTIKI_ASMFILES:.S=.o)}

CONTIKI_CASMOBJECTFILES = ${addprefix $(OBJECTDIR)/,$(CONTIKI_CASMFILES:.cS=.o)}

CONTIKI_PLATFORM_DIRS = $(PLATFORM_APPDIRS) \
	 ${addprefix $(CONTIKI)/platform/$(TARGET)/, $(CONTIKI_TARGET_DIRS)}

#".cS" suffix means assembler file with #include directive
#so that a developer can use definitions of C-style include file
#in assembler file.  Make sure the header file contains only compiler
#directives. (i.e. #define, etc.)
vpath %.cS $(CONTIKI_PLATFORM_DIRS)

#option -MMD doesn't work well on SDCC as of 2.9.0
$(OBJECTDIR)/%.o: %.c | $(OBJECTDIR)
	$(CC) $(CFLAGS) -c $< -o $@

ifndef CUSTOM_RULE_CS_TO_OBJECTDIR_O
$(OBJECTDIR)/%.o: %.cS | $(OBJECTDIR)
	cp $< $(OBJECTDIR)/$*.c
	$(CC) $(CFLAGS) -E $(OBJECTDIR)/$*.c > $(OBJECTDIR)/tmp
	perl -pe "s/^#(.*)/;$$1/" $(OBJECTDIR)/tmp > $(OBJECTDIR)/$*.S
	$(AS) $(ASFLAGS) -o $@ $(OBJECTDIR)/$*.S
	rm -f $(OBJECTDIR)/tmp
endif

#CUSTOM_RULE_ALLOBJS_TO_TARGETLIB
contiki-$(TARGET).lib: $(CONTIKI_OBJECTFILES) $(PROJECT_OBJECTFILES) $(CONTIKI_ASMOBJECTFILES) $(CONTIKI_CASMOBJECTFILES)
	rm -f $@
	for target in $^; do echo $$target >> $@; done

#CUSTOM_RULE_LINK
%.ihx: contiki-$(TARGET).lib
	cp $(OBJECTDIR)/crt0.o $(OBJECTDIR)/crt0.rel
	$(CC) $(LDFLAGS) -o $@ $(OBJECTDIR)/crt0.rel ${addprefix -l,$(LINKER_LIBS)}
